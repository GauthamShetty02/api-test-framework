import * as fs from 'fs';
import * as path from 'path';

export class TestData {
  static data = new Map();

  static loadFromFile(filePath) {
    try {
      const fullPath = path.resolve(filePath);
      const fileContent = fs.readFileSync(fullPath, 'utf-8');
      
      if (filePath.endsWith('.json')) {
        return JSON.parse(fileContent);
      }
      
      throw new Error('Unsupported file format. Only JSON is supported.');
    } catch (error) {
      throw new Error(`Failed to load test data from ${filePath}: ${error}`);
    }
  }

  static set(key, value) {
    TestData.data.set(key, value);
  }

  static get(key) {
    return TestData.data.get(key);
  }

  static has(key) {
    return TestData.data.has(key);
  }

  static clear() {
    TestData.data.clear();
  }

  static generateRandomString(length = 10) {
    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
    let result = '';
    for (let i = 0; i < length; i++) {
      result += chars.charAt(Math.floor(Math.random() * chars.length));
    }
    return result;
  }

  static generateRandomEmail() {
    return `test_${TestData.generateRandomString(8)}@example.com`;
  }

  static generateRandomNumber(min = 1, max = 1000) {
    return Math.floor(Math.random() * (max - min + 1)) + min;
  }

  static getCurrentTimestamp() {
    return new Date().toISOString();
  }
}