import { Logger } from './Logger.js';

export class Reporter {
  static testResults = [];

  static addTestResult(name, status, duration, error) {
    const result = {
      name,
      status,
      duration,
      error,
      timestamp: new Date().toISOString()
    };
    
    Reporter.testResults.push(result);
    Logger.info(`Test result added: ${name} - ${status}`, result);
  }

  static getTestResults() {
    return Reporter.testResults;
  }

  static getSummary() {
    const total = Reporter.testResults.length;
    const passed = Reporter.testResults.filter(r => r.status === 'passed').length;
    const failed = Reporter.testResults.filter(r => r.status === 'failed').length;
    const skipped = Reporter.testResults.filter(r => r.status === 'skipped').length;
    const passRate = total > 0 ? (passed / total) * 100 : 0;

    return { total, passed, failed, skipped, passRate };
  }

  static generateReport() {
    const summary = Reporter.getSummary();
    const report = `
Test Execution Summary
=====================
Total Tests: ${summary.total}
Passed: ${summary.passed}
Failed: ${summary.failed}
Skipped: ${summary.skipped}
Pass Rate: ${summary.passRate.toFixed(2)}%

Detailed Results:
${Reporter.testResults.map(r => 
  `- ${r.name}: ${r.status.toUpperCase()} (${r.duration}ms)${r.error ? ` - ${r.error}` : ''}`
).join('\n')}
    `;

    Logger.info('Test report generated', summary);
    return report;
  }

  static clear() {
    Reporter.testResults = [];
    Logger.info('Test results cleared');
  }
}